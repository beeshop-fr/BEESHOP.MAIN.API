name: CD - Main (Build/Push)

on:
  push:
    branches: 
      - main
      - release/**
    paths:
      - "BEESHOP.MAIN.API/**"
      - "BEESHOP.MAIN.API.sln"
      - "Dockerfile"
      - ".github/workflows/cd.yml"
  workflow_dispatch: {}

env:
  IMAGE_NAME: louis404/beeshop-main-api
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  SONAR_TOKEN:    ${{ secrets.SONAR_TOKEN }}
  PROJECT_KEY:    beeshop-main-api       # adapte si tu as déjà un key côté Sonar
  PROJECT_NAME:   "BEESHOP MAIN API"     # nom affiché dans Sonar

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Compute version (NBGV)
        id: nbgv
        uses: dotnet/nbgv@v0.4

      - name: "Guard: SemVer x.x.x only"
        run: |
          VER="${{ steps.nbgv.outputs.SemVer2 }}"
          CLEAN_VER="${VER%%+*}"name: CD - Main (Build/Push)

on:
  push:
    branches: 
      - main
      - release/**
    paths:
      - "BEESHOP.MAIN.API/**"
      - "BEESHOP.MAIN.API.sln"
      - "Dockerfile"
      - ".github/workflows/cd.yml"
  workflow_dispatch: {}

env:
  IMAGE_NAME: louis404/beeshop-main-api
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  SONAR_TOKEN:    ${{ secrets.SONAR_TOKEN }}
  PROJECT_KEY:    beeshop-main-api       # adapte si tu as déjà un key côté Sonar
  PROJECT_NAME:   "BEESHOP MAIN API"     # nom affiché dans Sonar

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Compute version (NBGV)
        id: nbgv
        uses: dotnet/nbgv@v0.4

      - name: "Guard: SemVer x.x.x only"
        run: |
          VER="${{ steps.nbgv.outputs.SemVer2 }}"
          CLEAN_VER="${VER%%+*}"
          if [[ ! "$CLEAN_VER" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Version invalide: $CLEAN_VER (attendu: x.y.z)"
            exit 1
          fi
          echo "CLEAN_VER=$CLEAN_VER" >> $GITHUB_ENV

      - name: Enable BuildKit (faster builds)
        run: |
          echo "DOCKER_BUILDKIT=1" >> $GITHUB_ENV
          echo "COMPOSE_DOCKER_CLI_BUILD=1" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Build & push image
        run: |
          echo "Build $IMAGE_NAME:${CLEAN_VER}"
          docker build -f Dockerfile -t "$IMAGE_NAME:${CLEAN_VER}" .
          docker push "$IMAGE_NAME:${CLEAN_VER}"name: CD - Main (Build/Push)

on:
  push:
    branches: 
      - main
      - release/**
    paths:
      - "BEESHOP.MAIN.API/**"
      - "BEESHOP.MAIN.API.sln"
      - "Dockerfile"
      - ".github/workflows/cd.yml"
  workflow_dispatch: {}

env:
  IMAGE_NAME: louis404/beeshop-main-api
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  SONAR_TOKEN:    ${{ secrets.SONAR_TOKEN }}
  PROJECT_KEY:    beeshop-main-api       # adapte si tu as déjà un key côté Sonar
  PROJECT_NAME:   "BEESHOP MAIN API"     # nom affiché dans Sonar

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Compute version (NBGV)
        id: nbgv
        uses: dotnet/nbgv@v0.4

      - name: "Guard: SemVer x.x.x only"
        run: |
          VER="${{ steps.nbgv.outputs.SemVer2 }}"
          CLEAN_VER="${VER%%+*}"
          if [[ ! "$CLEAN_VER" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Version invalide: $CLEAN_VER (attendu: x.y.z)"
            exit 1
          fi
          echo "CLEAN_VER=$CLEAN_VER" >> $GITHUB_ENV

      - name: Enable BuildKit (faster builds)
        run: |
          echo "DOCKER_BUILDKIT=1" >> $GITHUB_ENV
          echo "COMPOSE_DOCKER_CLI_BUILD=1" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Build & push image
        run: |
          echo "Build $IMAGE_NAME:${CLEAN_VER}"
          docker build -f Dockerfile -t "$IMAGE_NAME:${CLEAN_VER}" .
          docker push "$IMAGE_NAME:${CLEAN_VER}"name: CD - Main (Build/Push)

on:
  push:
    branches: 
      - main
      - release/**
    paths:
      - "BEESHOP.MAIN.API/**"
      - "BEESHOP.MAIN.API.sln"
      - "Dockerfile"
      - ".github/workflows/cd.yml"
  workflow_dispatch: {}

env:
  IMAGE_NAME: louis404/beeshop-main-api
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  SONAR_TOKEN:    ${{ secrets.SONAR_TOKEN }}
  PROJECT_KEY:    beeshop-main-api       # adapte si tu as déjà un key côté Sonar
  PROJECT_NAME:   "BEESHOP MAIN API"     # nom affiché dans Sonar

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Compute version (NBGV)
        id: nbgv
        uses: dotnet/nbgv@v0.4

      - name: "Guard: SemVer x.x.x only"
        run: |
          VER="${{ steps.nbgv.outputs.SemVer2 }}"
          CLEAN_VER="${VER%%+*}"
          if [[ ! "$CLEAN_VER" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Version invalide: $CLEAN_VER (attendu: x.y.z)"
            exit 1
          fi
          echo "CLEAN_VER=$CLEAN_VER" >> $GITHUB_ENV

      - name: Enable BuildKit (faster builds)
        run: |
          echo "DOCKER_BUILDKIT=1" >> $GITHUB_ENV
          echo "COMPOSE_DOCKER_CLI_BUILD=1" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Build & push image
        run: |
          echo "Build $IMAGE_NAME:${CLEAN_VER}"
          docker build -f Dockerfile -t "$IMAGE_NAME:${CLEAN_VER}" .
          docker push "$IMAGE_NAME:${CLEAN_VER}"name: CD - Main (Build/Push)

on:
  push:
    branches: 
      - main
      - release/**
    paths:
      - "BEESHOP.MAIN.API/**"
      - "BEESHOP.MAIN.API.sln"
      - "Dockerfile"
      - ".github/workflows/cd.yml"
  workflow_dispatch: {}

env:
  IMAGE_NAME: louis404/beeshop-main-api
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  SONAR_TOKEN:    ${{ secrets.SONAR_TOKEN }}
  PROJECT_KEY:    beeshop-main-api       # adapte si tu as déjà un key côté Sonar
  PROJECT_NAME:   "BEESHOP MAIN API"     # nom affiché dans Sonar

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Compute version (NBGV)
        id: nbgv
        uses: dotnet/nbgv@v0.4

      - name: "Guard: SemVer x.x.x only"
        run: |
          VER="${{ steps.nbgv.outputs.SemVer2 }}"
          CLEAN_VER="${VER%%+*}"
          if [[ ! "$CLEAN_VER" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Version invalide: $CLEAN_VER (attendu: x.y.z)"
            exit 1
          fi
          echo "CLEAN_VER=$CLEAN_VER" >> $GITHUB_ENV

      - name: Enable BuildKit (faster builds)
        run: |
          echo "DOCKER_BUILDKIT=1" >> $GITHUB_ENV
          echo "COMPOSE_DOCKER_CLI_BUILD=1" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Build & push image
        run: |
          echo "Build $IMAGE_NAME:${CLEAN_VER}"
          docker build -f Dockerfile -t "$IMAGE_NAME:${CLEAN_VER}" .
          docker push "$IMAGE_NAME:${CLEAN_VER}"
          if [[ ! "$CLEAN_VER" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Version invalide: $CLEAN_VER (attendu: x.y.z)"
            exit 1
          fi
          echo "CLEAN_VER=$CLEAN_VER" >> $GITHUB_ENV

      - name: Enable BuildKit (faster builds)
        run: |
          echo "DOCKER_BUILDKIT=1" >> $GITHUB_ENV
          echo "COMPOSE_DOCKER_CLI_BUILD=1" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Build & push image
        run: |
          echo "Build $IMAGE_NAME:${CLEAN_VER}"
          docker build -f Dockerfile -t "$IMAGE_NAME:${CLEAN_VER}" .
          docker push "$IMAGE_NAME:${CLEAN_VER}"