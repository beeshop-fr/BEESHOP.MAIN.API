name: CD - Main (Docker Build/Push + Deploy)

on:
  push:
    branches: [ main, release/** ]
    paths:
      - "BEESHOP.MAIN.API/**"
      - "BEESHOP.MAIN.API.sln"
      - "Dockerfile"
      - ".github/workflows/cd.yml"
  workflow_dispatch: {}

env:
  IMAGE_NAME: louis404/beeshop-auth-api

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get version (from csproj or fallback to SHA)
        id: ver
        shell: bash
        run: |
          VERSION=$(grep -oPm1 "(?<=<Version>)[^<]+" BEESHOP.MAIN.API/BEESHOP.MAIN.API.csproj || true)
          if [ -z "$VERSION" ]; then VERSION=$(echo "${GITHUB_SHA}" | cut -c1-7); fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "VERSION=$VERSION"

      - name: Enable BuildKit (faster builds)
        run: |
          echo "DOCKER_BUILDKIT=1" >> $GITHUB_ENV
          echo "COMPOSE_DOCKER_CLI_BUILD=1" >> $GITHUB_ENV

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME:${{ steps.ver.outputs.version }} -t $IMAGE_NAME:latest .

      - name: Push Docker image
        run: |
          docker push $IMAGE_NAME:${{ steps.ver.outputs.version }}
          docker push $IMAGE_NAME:latest

  deploy:
    needs: build_and_push
    if: github.ref_name == 'main'   # déploie auto seulement depuis main
    runs-on: ubuntu-latest
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script_stop: true
          script: |
            set -e
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            cd /home/ubuntu/beeshop-main
            # Assure-toi que .env et docker-compose.yml existent déjà ici
            docker compose pull main-api
            docker compose up -d main-api
            docker image prune -f   
