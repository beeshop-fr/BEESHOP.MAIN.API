name: CI - Build and Test .NET

on:
  push:
    branches: [ main, develop, 'release/**']
  pull_request:
    branches: [ main, develop ]

env:
  SONAR_PROJECT_KEY:  beeshop-main-api
  SONAR_PROJECT_NAME: "BEESHOP MAIN API"

jobs:
  build_test_analyze:
    name: Build, Test, and Analyze
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with: {fetch-depth:0}


      - name: Setup Java (for SonarScanner)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install SonarScanner for .NET
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Expose dotnet tools on PATH
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH
     
      - name: SonarQube - Begin (main)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          dotnet-sonarscanner begin \
            /k:"BEESHOP-MAIN-API" \
            /n:"BEESHOP MAIN API" \
            /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.sourceEncoding="UTF-8" \
            /d:sonar.scm.revision="${{ github.sha }}" \
            /d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx" \
            /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml"

      - name: SonarQube - Begin (develop)
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        run: |
          dotnet-sonarscanner begin \
            /k:"BEESHOP-MAIN-API-DEVELOP" \
            /n:"BEESHOP MAIN API - Develop" \
            /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.sourceEncoding="UTF-8" \
            /d:sonar.scm.revision="${{ github.sha }}" \
            /d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx" \
            /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml"

      - name: Restore dependencies
        run: dotnet restore BEESHOP.MAIN.API.sln

      - name: Build solution
        run: dotnet build BEESHOP.MAIN.API.sln --no-restore --configuration Release

      - name: Test (+coverage)
        run: |
          dotnet test BEESHOP.MAIN.API.sln -c Release --no-build \
            --logger "trx;LogFileName=test-results.trx" \
            /p:CollectCoverage=true \
            /p:CoverletOutputFormat=opencover \
            /p:CoverletOutput=./TestResults/coverage \
            /p:ExcludeByFile="**/Migrations/*"

      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Generate HTML coverage report
        run: |
         reportgenerator \
            -reports:**/TestResults/**/coverage.opencover.xml \
            -targetdir:coverage-report \
            -reporttypes:Html

      - name: Upload coverage HTML
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: coverage-report/


      - name: SonarQube - End
        if: always()
        run: dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"